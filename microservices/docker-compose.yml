services:
  # Identity Service Database
  identity-db:
    image: postgres:14-alpine
    container_name: identity-db
    environment:
      POSTGRES_DB: identity_service
      POSTGRES_USER: identity_app
      POSTGRES_PASSWORD: identity_password
    ports:
      - "5432:5432"
    volumes:
      - identity-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U identity_app -d identity_service" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  # Task Service Database
  task-db:
    image: postgres:14-alpine
    container_name: task-db
    environment:
      POSTGRES_DB: task_service
      POSTGRES_USER: task_app
      POSTGRES_PASSWORD: task_password
    ports:
      - "5433:5432" # Map to a different host port to avoid conflicts
    volumes:
      - task-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U task_app -d task_service" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  # Identity Service
  identity-service:
    build:
      context: ./identity-service
      dockerfile: Dockerfile
    container_name: identity-service
    depends_on:
      identity-db:
        condition: service_healthy
    environment:
      SERVER_PORT: 8080
      SERVER_CONTEXT_PATH: /api
      SPRING_PROFILES_ACTIVE: dev
      DB_HOST: identity-db
      DB_PORT: 5432
      DB_NAME: identity_service
      DB_USERNAME: identity_app
      DB_PASSWORD: identity_password
      JWT_SECRET: changeThisToASecureRandomStringInProduction
      JWT_EXPIRATION: 86400000
      LOG_LEVEL: INFO
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:8081
    ports:
      - "8080:8080"
    networks:
      - microservices-network

  # Task Service
  task-service:
    build:
      context: ./task-service
      dockerfile: Dockerfile
    container_name: task-service
    depends_on:
      task-db:
        condition: service_healthy
      identity-service:
        condition: service_started
    environment:
      SERVER_PORT: 8081
      SERVER_CONTEXT_PATH: /api
      SPRING_PROFILES_ACTIVE: dev
      DB_HOST: task-db
      DB_PORT: 5432
      DB_NAME: task_service
      DB_USERNAME: task_app
      DB_PASSWORD: task_password
      JWT_SECRET: changeThisToASecureRandomStringInProduction
      JWT_ISSUER: identity-service
      LOG_LEVEL: INFO
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:8080
    ports:
      - "8081:8081"
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  identity-db-data:
  task-db-data:
